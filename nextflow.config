process {
    publishDir = {"./results_rbx/$sid/$task.process"}
    scratch = true
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    afterScript = 'sleep 1'
}

params {
    help=false
    root=false
    atlas_centroids=false
    atlas_directory=false
    atlas_anat=false
    atlas_config=false
    run_average_bundles=true

    //**Recobundle segmentation**//
        multi_parameters=18
        minimal_vote_ratio=0.5
        wb_clustering_thr="15 12"
        seeds="0"
        outlier_alpha=0.5

    //**Number of processes per tasks**//
        register_processes=4
        rbx_processes=4
        rbx_memory_limit='8 GB'

    //**Process control**//
        processes = false

    //**Output directory**//
        output_dir=false
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

singularity.autoMounts = true

profiles {
    large_dataset {
        params.rbx_memory_limit='16 GB'
    }

    fully_reproducible {
        params.register_processes=1
        params.rbx_processes=1
    }

    macos {
            process.scratch="/tmp"
    }

    cbrain {
      process{
        if(params.output_dir) {
          publishDir = [path: {"$params.output_dir/$sid/$task.process"}, mode: 'copy']
        }
        else{
          publishDir = [path: {"./results_rbx/$sid/$task.process"}, mode: 'copy']
        }
      }
    }
}
